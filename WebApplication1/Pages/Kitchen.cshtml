@page "{restaurantId}"
@model WebApplication1.Pages.KitchenModel
@{
    ViewData["Title"] = "廚房訂單";
}

@{
    // 先排序好後存在 groupedOrders 變數中
    var groupedOrders = Model.Orders
        .GroupBy(o => o.TableNumber)
        .OrderBy(g => System.Text.RegularExpressions.Regex.Replace(g.Key, @"\d+", m => m.Value.PadLeft(4, '0')))
        .ToList();
}

@{
    var css = @"
    <style>
    .order-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
        padding: 10px;
    }

    .order-card {
        border: 2px solid #444;
        padding: 15px;
        border-radius: 10px;
        background-color: #f9f9f9;
        transition: transform 0.3s ease, opacity 0.3s ease;
        animation: slideIn 0.5s ease;
        position: relative;
        overflow: hidden;
        touch-action: pan-y;
        user-select: none;
    }

    @keyframes slideIn {
        from {
            transform: translateY(30px);
            opacity: 0;
        }
        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    @media (max-width: 600px) {
        .order-card {
            font-size: 14px;
            padding: 10px;
        }
    }
    </style>";
}
@Html.Raw(css)

<h1>目前收到的訂單 - @Model.RestaurantId</h1>



@if (Model.Orders.Count == 0)
{
    <p>目前沒有訂單。</p>
}
else
{
    <div class="order-list" id="orderList">
        @foreach (var group in groupedOrders)
        {
            <h2>
                桌號：@group.Key
                <button onclick="removeTable('@group.Key')">🗑️ 刪除整桌</button>
            </h2>
            <div class="order-list" id="orderList-@group.Key">
                @foreach (var order in group.OrderByDescending(o => o.Timestamp))
                {
                    <div class="order-card" data-id="@order.Id.ToString()" data-table="@order.TableNumber">
                        <strong>訂單時間：</strong>@order.Timestamp.ToString("HH:mm:ss")<br />
                        <strong>內容：</strong>
                        <ul style="margin-top: 8px;">
                            @foreach (var item in order.Items)
                            {
                                <li>@item.Key x @item.Value</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        }
    </div>
}

<a href="/Order?restaurantId=@Model.RestaurantId">返回點餐頁面</a>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
    const orderList = document.getElementById("orderList");

    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/orderHub")
        .build();

    connection.start().then(() => {
        console.log("✅ Kitchen connected");

        connection.on("NewOrder_@Model.RestaurantId", () => {
            location.reload();
        });
    });

    let startX = 0;
    let currentX = 0;
    let card = null;

    function handleSwipeDelete(cardElement) {
        const id = cardElement.dataset.id;
        console.log("🗑️ 準備刪除 ID:", id);

        cardElement.style.transition = "all 0.3s ease";
        cardElement.style.transform = "translateX(100%)";
        cardElement.style.opacity = "0";

        setTimeout(() => {
            cardElement.remove();
            removeOrderFromServer(id);
        }, 300);
    }

    orderList.addEventListener("touchstart", e => {
        card = e.target.closest(".order-card");
        if (!card) return;
        startX = e.touches[0].clientX;
        card.style.transition = "none";
    });

    orderList.addEventListener("touchmove", e => {
        if (!card) return;
        currentX = e.touches[0].clientX;
        const delta = currentX - startX;
        if (delta > 0) {
            card.style.transform = `translateX(${delta}px)`;
        }
    });

    orderList.addEventListener("touchend", () => {
        if (!card) return;
        const delta = currentX - startX;
        if (delta > 100) {
            handleSwipeDelete(card);
        } else {
            card.style.transition = "all 0.3s ease";
            card.style.transform = "translateX(0)";
        }
        card = null;
    });

    orderList.addEventListener("mousedown", e => {
        card = e.target.closest(".order-card");
        if (!card) return;
        startX = e.clientX;
        card.style.transition = "none";

        const onMouseMove = e => {
            currentX = e.clientX;
            const delta = currentX - startX;
            if (delta > 0) {
                card.style.transform = `translateX(${delta}px)`;
            }
        };

        const onMouseUp = e => {
            const delta = currentX - startX;
            if (delta > 100) {
                handleSwipeDelete(card);
            } else {
                card.style.transition = "all 0.3s ease";
                card.style.transform = "translateX(0)";
            }

            document.removeEventListener("mousemove", onMouseMove);
            document.removeEventListener("mouseup", onMouseUp);
            card = null;
        };

        document.addEventListener("mousemove", onMouseMove);
        document.addEventListener("mouseup", onMouseUp);
    });

    function removeOrderFromServer(id) {
        const url = `${window.location.pathname}?handler=Remove`;

        fetch(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(id)
        }).then(async res => {
            if (res.ok) {
                const result = await res.json();
                if (result.success) {
                    console.log("✅ 後端刪除成功");
                } else {
                    alert("❌ 刪除失敗");
                }
            } else {
                console.error("❌ 伺服器回傳錯誤狀態", res.status);
                alert("❌ 刪除失敗，請稍後再試");
            }
        }).catch(err => {
            console.error("❌ 傳送錯誤", err);
        });
    }

    function removeTable(tableNumber) {
        if (!confirm(`確定要移除桌號 ${tableNumber} 的所有訂單嗎？`)) return;

        fetch(`${window.location.pathname}?handler=RemoveTable`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(tableNumber)
        }).then(async res => {
            if (res.ok) {
                const result = await res.json();
                if (result.success) {
                    document.getElementById(`orderList-${tableNumber}`).remove();
                    alert(`✅ 已刪除桌號 ${tableNumber} 所有訂單`);
                } else {
                    alert("❌ 刪除失敗");
                }
            } else {
                alert("❌ 伺服器錯誤");
            }
        }).catch(err => {
            alert("❌ 傳送失敗");
            console.error(err);
        });
    }
</script>